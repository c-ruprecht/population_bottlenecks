import os
from snakemake.io import expand, directory
import re
# First, add this import at the top of your file
import glob


# PATHS
OUTPUT_DIR = '/sc/arion/work/ruprec01/results/P4C4/'  


# Create main output directory structure
os.makedirs(OUTPUT_DIR + "4-moleculetables", exist_ok=True)


STRAINS="ST1,ST2,ST4,ST5,ST6"
SAMPLE_NAMES = STRAINS.split(",")

rule all:
    input:
        OUTPUT_DIR + "4-moleculetables/molecule_table.done",
        expand(OUTPUT_DIR + "5-FP/{strain}/{strain}.FP_complete.done", strain=SAMPLE_NAMES),
        

rule create_molecule_table:
    input:
        directory = OUTPUT_DIR + "3-readtables/"
    output:
        done = OUTPUT_DIR + "4-moleculetables/molecule_table.done",
        strain_files = expand(OUTPUT_DIR + "4-moleculetables/{strain}_readstable.csv", strain=SAMPLE_NAMES)
    params:
        output_dir = directory(OUTPUT_DIR + "4-moleculetables/"),
        threshold = 500,
        gavage_ids = "s81,s82",
        strain_barcode = STRAINS
    log:
        OUTPUT_DIR + "0-logs/4-moleculetable.log"
    shell:
        '''
        mkdir -p {params.output_dir}
        mkdir -p {params.output_dir}/figures
        conda run -n umi_tools_env python scripts/create_molecule_table_R2.py \
        -i {input.directory} \
        -o {params.output_dir} \
        -g {params.gavage_ids} \
        -t {params.threshold} \
        -st {params.strain_barcode} \
        &> {log}
        touch {output}
        '''

rule get_FP:
    input:
        readstable = OUTPUT_DIR + "4-moleculetables/{strain}_readstable.csv"
    output:
        OUTPUT_DIR + "5-FP/{strain}/{strain}.FP_complete.done"
    params:
        output_dir=directory(OUTPUT_DIR + "5-FP/{strain}/"),
    log:
        OUTPUT_DIR + "0-logs/FP/{strain}_FP_complete.log"
    shell:
        """
        mkdir -p {params.output_dir}
        mkdir -p $(dirname {log})
        ml R/4.2.0
        # Process single file with error handling
        echo "Processing {input.readstable} using getFP.R"
        if Rscript scripts/getFP_3.R {input.readstable} NULL "1" 0.03 {params.output_dir}; then
            echo "Successfully processed {input}" 
        else
            echo "WARNING: Error processing {input.readstable}, creating empty output file"
            touch {params.output_dir}/empty_output  # Create a file inside the directory
        fi &> {log}
        
        # Always touch the done file so the workflow can continue
        touch {output}
        """

